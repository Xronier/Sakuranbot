import os
from discord.ext.commands import bot
from discord.ext import commands
import sqlite3


class KanjiQuestion(object):
    def __init__(self, correct, incorrect, options, correct_misc):
        self.correct = correct
        self.incorrect = incorrect
        self.options = options
        self.correct_misc = correct_misc
    # Returns the Onyomi of the correct answer (i.e kan)
    def get_correct(self):
        return self.correct

    # Returns all info (in the DB) about the correct answer.
    def get_correct_misc(self):
        return self.correct_misc

    # Returns a list of the Onyomi of the incorrect answers (i.e [chi, sou, kyou]).
    def get_incorrect(self):
        return self.incorrect

    # Returns a list of Onyomi of the incorrect answers + correct answer.
    def get_options(self):
        return self.options

    # Formatted string of the correct answers misc info.
    def get_correct_misc_str(self):
        return "Kunyomi: {} \n" \
               "Meaning: {} \n" \
               "JLPT Level: {} \n" \
               "Grade Level: {} \n".format(self.correct_misc[2], self.correct_misc[3], self.correct_misc[4], self.correct_misc[5])

# Selects 4 Kanji from the DB, one being correct and the other three being incorrect.
def generate_question(level):
    level = level.split(",")
    db = sqlite3.connect('kanji.sqlite')
    cursor = db.cursor()

    # Since the where is dynamic, meaning you can for example use n1 AND n2, construct it here.
    where = "WHERE "
    for i in range(len(level)):
        where += "`JLPT-test` = {} ".format(level[i])
        if i < len(level) - 1:
            where += "OR "

    # Get random Kanji from the DB.
    answer = cursor.execute("SELECT * "
                            "FROM kanji " +
                            where +
                            " ORDER BY RANDOM() LIMIT 1").fetchone()
    incorrect = cursor.execute("SELECT OnwithinJoyo FROM kanji ORDER BY RANDOM() LIMIT 3").fetchall()

    # Check if OnwithinJoyo in answer is also present in incorrect (meaning there's duplicate readings). If there is,
    # generate some new incorrect answers.
    while answer[1] in incorrect:
        incorrect = cursor.execute("SELECT OnwithinJoyo "
                                   "FROM kanji "
                                   "ORDER BY RANDOM() LIMIT 3").fetchall()

    # Assemble all of the answer's onyomi readings into a list.
    options = []
    for i in range(len(incorrect)):
        options.append(incorrect[i][0])
    options.append(answer[1])

    kq = KanjiQuestion(correct=answer[1], incorrect=incorrect, options=options, correct_misc=answer)

    # Close DB.
    cursor.close()
    db.close()
    return kq




